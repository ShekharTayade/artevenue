from django.db import models
from django.contrib.auth.models import User
from django.conf import settings

from artevenue.models import Stock_image, Product_type, Stock_image_category
from artevenue.models import Promotion, Moulding, Print_medium, Mount, Board, Acrylic, Stretch 


class Flipkart_data(models.Model):
	flk_sku =  models.CharField(primary_key=True, max_length = 15)
	product = models.ForeignKey(Stock_image, on_delete=models.CASCADE, null=False)
	product_name = models.CharField(max_length = 128, null=True, default = '')
	description = models.CharField(max_length = 2000, blank=True, default = '')
	part_number = models.CharField(max_length = 30, null=True)
	product_type = models.ForeignKey(Product_type, models.CASCADE, null=True)
	category = models.ForeignKey(Stock_image_category, models.CASCADE, null=True)
	is_published = models.BooleanField(null=False, default=False)
	aspect_ratio = models.DecimalField(max_digits = 21, decimal_places=18, null=True)
	image_type =  models.CharField(max_length = 1, null=True)
	orientation = models.CharField(max_length = 20, null=True)
	max_width = models.DecimalField(max_digits = 6, decimal_places=2, null=True)
	max_height = models.DecimalField(max_digits = 6, decimal_places=2, null=True)
	min_width = models.DecimalField(max_digits = 6, decimal_places=2, null=True)
	publisher = models.CharField(max_length = 600, null=True)
	artist = models.CharField(max_length = 600, null=True)
	colors = models.CharField(max_length = 600, null=True)
	key_words = models.CharField(max_length = 2000, null=True)
	url = models.CharField(max_length = 1000, blank=True, default='')
	thumbnail_url = models.CharField(max_length = 1000, blank=True, default='')
	framed_url = models.CharField(max_length = 1000, blank=True, default='')
	framed_thumbnail_url = models.CharField(max_length = 1000, blank=True, default='')
	promotion = models.ForeignKey(Promotion, models.PROTECT, null=True)
	quantity = models.IntegerField(null=True)
	item_unit_price = models.DecimalField(max_digits=12, decimal_places=2, null=True)
	item_sub_total = models.DecimalField(max_digits=12, decimal_places=2,  null=True)
	item_disc_amt  = models.DecimalField(max_digits=12, decimal_places=2,  null=True)
	item_tax  = models.DecimalField(max_digits=12, decimal_places=2, null=True)
	item_total = models.DecimalField(max_digits=12, decimal_places=2, null=True)
	moulding = models.ForeignKey(Moulding,on_delete=models.PROTECT, null=True)
	moulding_size = models.DecimalField(max_digits=12, decimal_places=2, null=True)
	print_medium = models.ForeignKey(Print_medium, models.PROTECT, null=False, default='PAPER')
	print_medium_size = models.DecimalField(max_digits=12, decimal_places=2, null=True)
	mount = models.ForeignKey(Mount, models.PROTECT, null=True)
	mount_size = models.DecimalField(max_digits=12, decimal_places=2, null=True)
	board = models.ForeignKey(Board, models.PROTECT, null=True)
	board_size = models.DecimalField(max_digits=12, decimal_places=2, null=True)
	acrylic = models.ForeignKey(Acrylic, models.PROTECT, null=True)
	acrylic_size = models.DecimalField(max_digits=12, decimal_places=2, null=True)
	stretch = models.ForeignKey(Stretch, models.PROTECT, null=True)
	stretch_size = models.DecimalField(max_digits=12, decimal_places=2, null=True)
	image_width = models.DecimalField(max_digits=3, decimal_places=0, blank=False, null=False)
	image_height = models.DecimalField(max_digits=3, decimal_places=0, blank=False, null=False)	
	weight = models.DecimalField(max_digits=6, decimal_places=2, blank=False, null=False)	
	created_date = models.DateTimeField(auto_now_add=True, null=False)
	updated_date = models.DateTimeField(auto_now=True, null=False)	
	group_id = models.CharField(max_length = 10, null=True)
	def __str__(self):
		return str( self.product_id ) + " " + self.product_name



class Montage_amz_data(models.Model):
	PARENT_CHILD = (
		('P', 'Parent'),
		('C', 'Child'),
	)
	amazon_key =  models.AutoField(primary_key=True)
	amazon_sku =  models.CharField(max_length = 15, null=True, default = '')
	product = models.ForeignKey(Stock_image, on_delete=models.CASCADE, null=False)
	product_name = models.CharField(max_length = 128, null=True, default = '')
	description = models.CharField(max_length = 2000, blank=True, default = '')
	part_number = models.CharField(max_length = 30, null=True)
	product_type = models.ForeignKey(Product_type, models.CASCADE, null=True)
	category = models.ForeignKey(Stock_image_category, models.CASCADE, null=True)
	category_name = models.CharField(max_length = 128, null=True, default = '')
	is_published = models.BooleanField(null=False, default=False)
	aspect_ratio = models.DecimalField(max_digits = 21, decimal_places=18, null=True)
	image_type =  models.CharField(max_length = 1, null=True)
	orientation = models.CharField(max_length = 20, null=True)
	max_width = models.DecimalField(max_digits = 6, decimal_places=2, null=True)
	max_height = models.DecimalField(max_digits = 6, decimal_places=2, null=True)
	min_width = models.DecimalField(max_digits = 6, decimal_places=2, null=True)
	publisher = models.CharField(max_length = 600, null=True)
	artist = models.CharField(max_length = 600, null=True)
	colors = models.CharField(max_length = 600, null=True)
	key_words = models.CharField(max_length = 2000, null=True)
	url = models.CharField(max_length = 1000, blank=True, default='')
	thumbnail_url = models.CharField(max_length = 1000, blank=True, default='')
	framed_url = models.CharField(max_length = 1000, blank=True, default='')
	framed_thumbnail_url = models.CharField(max_length = 1000, blank=True, default='')
	promotion = models.ForeignKey(Promotion, models.PROTECT, null=True)
	promotion_name = models.CharField(max_length = 128, null=True, default = '')
	quantity = models.IntegerField(null=True)
	item_unit_price = models.DecimalField(max_digits=12, decimal_places=2, null=True)
	item_sub_total = models.DecimalField(max_digits=12, decimal_places=2,  null=True)
	item_disc_amt  = models.DecimalField(max_digits=12, decimal_places=2,  null=True)
	item_tax  = models.DecimalField(max_digits=12, decimal_places=2, null=True)
	item_total = models.DecimalField(max_digits=12, decimal_places=2, null=True)
	moulding = models.ForeignKey(Moulding,on_delete=models.PROTECT, null=True)
	moulding_name = models.CharField(max_length = 30, null=True, default = '')
	moulding_size = models.DecimalField(max_digits=12, decimal_places=2, null=True)
	print_medium = models.ForeignKey(Print_medium, models.PROTECT, null=False, default='PAPER')
	print_medium_name = models.CharField(max_length = 30, null=True, default = '')
	print_medium_size = models.DecimalField(max_digits=12, decimal_places=2, null=True)
	mount = models.ForeignKey(Mount, models.PROTECT, null=True)
	mount_name = models.CharField(max_length = 30, null=True, default = '')
	mount_size = models.DecimalField(max_digits=12, decimal_places=2, null=True)
	board = models.ForeignKey(Board, models.PROTECT, null=True)
	board_name = models.CharField(max_length = 30, null=True, default = '')
	board_size = models.DecimalField(max_digits=12, decimal_places=2, null=True)
	acrylic = models.ForeignKey(Acrylic, models.PROTECT, null=True)
	acrylic_name = models.CharField(max_length = 30, null=True, default = '')
	acrylic_size = models.DecimalField(max_digits=12, decimal_places=2, null=True)
	stretch = models.ForeignKey(Stretch, models.PROTECT, null=True)
	stretch_name = models.CharField(max_length = 30, null=True, default = '')
	stretch_size = models.DecimalField(max_digits=12, decimal_places=2, null=True)
	image_width = models.DecimalField(max_digits=3, decimal_places=0, blank=False, null=False)
	image_height = models.DecimalField(max_digits=3, decimal_places=0, blank=False, null=False)	
	created_date = models.DateTimeField(auto_now_add=True, null=False)
	updated_date = models.DateTimeField(auto_now=True, null=False)	
	ordered = models.BooleanField(null=False, default=False)
	order_number = models.CharField(max_length = 15, blank = True, default = '')
	order_date = models.DateField(blank=True, null=True)
	parent_child = models.CharField(max_length = 1, null=True, default = 'P',
		choices = PARENT_CHILD)
	parent_amz_sku = models.CharField(max_length = 15, null=True, default = '')
	def __str__(self):
		return str( self.product_id ) + " " + self.product_name
